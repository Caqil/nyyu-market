// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: proto/market.proto

package marketpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Candle messages
type Candle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Interval      string                 `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	OpenTime      int64                  `protobuf:"varint,3,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`    // Unix timestamp in milliseconds
	CloseTime     int64                  `protobuf:"varint,4,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"` // Unix timestamp in milliseconds
	Open          string                 `protobuf:"bytes,5,opt,name=open,proto3" json:"open,omitempty"`
	High          string                 `protobuf:"bytes,6,opt,name=high,proto3" json:"high,omitempty"`
	Low           string                 `protobuf:"bytes,7,opt,name=low,proto3" json:"low,omitempty"`
	Close         string                 `protobuf:"bytes,8,opt,name=close,proto3" json:"close,omitempty"`
	Volume        string                 `protobuf:"bytes,9,opt,name=volume,proto3" json:"volume,omitempty"`
	QuoteVolume   string                 `protobuf:"bytes,10,opt,name=quote_volume,json=quoteVolume,proto3" json:"quote_volume,omitempty"`
	TradeCount    int32                  `protobuf:"varint,11,opt,name=trade_count,json=tradeCount,proto3" json:"trade_count,omitempty"`
	IsClosed      bool                   `protobuf:"varint,12,opt,name=is_closed,json=isClosed,proto3" json:"is_closed,omitempty"`
	Source        string                 `protobuf:"bytes,13,opt,name=source,proto3" json:"source,omitempty"`
	ContractType  string                 `protobuf:"bytes,14,opt,name=contract_type,json=contractType,proto3" json:"contract_type,omitempty"` // spot, futures, perpetual
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Candle) Reset() {
	*x = Candle{}
	mi := &file_proto_market_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Candle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candle) ProtoMessage() {}

func (x *Candle) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candle.ProtoReflect.Descriptor instead.
func (*Candle) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{0}
}

func (x *Candle) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Candle) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *Candle) GetOpenTime() int64 {
	if x != nil {
		return x.OpenTime
	}
	return 0
}

func (x *Candle) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *Candle) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *Candle) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *Candle) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *Candle) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *Candle) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *Candle) GetQuoteVolume() string {
	if x != nil {
		return x.QuoteVolume
	}
	return ""
}

func (x *Candle) GetTradeCount() int32 {
	if x != nil {
		return x.TradeCount
	}
	return 0
}

func (x *Candle) GetIsClosed() bool {
	if x != nil {
		return x.IsClosed
	}
	return false
}

func (x *Candle) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Candle) GetContractType() string {
	if x != nil {
		return x.ContractType
	}
	return ""
}

type GetCandlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Interval      string                 `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	StartTime     *int64                 `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"` // Unix timestamp in milliseconds
	EndTime       *int64                 `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`       // Unix timestamp in milliseconds
	Limit         *int32                 `protobuf:"varint,5,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Source        *string                `protobuf:"bytes,6,opt,name=source,proto3,oneof" json:"source,omitempty"`                                 // binance, kraken, coinbase, aggregated, etc.
	ContractType  *string                `protobuf:"bytes,7,opt,name=contract_type,json=contractType,proto3,oneof" json:"contract_type,omitempty"` // spot, futures, perpetual
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCandlesRequest) Reset() {
	*x = GetCandlesRequest{}
	mi := &file_proto_market_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandlesRequest) ProtoMessage() {}

func (x *GetCandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandlesRequest.ProtoReflect.Descriptor instead.
func (*GetCandlesRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{1}
}

func (x *GetCandlesRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetCandlesRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *GetCandlesRequest) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *GetCandlesRequest) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *GetCandlesRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetCandlesRequest) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *GetCandlesRequest) GetContractType() string {
	if x != nil && x.ContractType != nil {
		return *x.ContractType
	}
	return ""
}

type GetCandlesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Candles       []*Candle              `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCandlesResponse) Reset() {
	*x = GetCandlesResponse{}
	mi := &file_proto_market_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCandlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCandlesResponse) ProtoMessage() {}

func (x *GetCandlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCandlesResponse.ProtoReflect.Descriptor instead.
func (*GetCandlesResponse) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{2}
}

func (x *GetCandlesResponse) GetCandles() []*Candle {
	if x != nil {
		return x.Candles
	}
	return nil
}

type GetLatestCandleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Interval      string                 `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Source        *string                `protobuf:"bytes,3,opt,name=source,proto3,oneof" json:"source,omitempty"`
	ContractType  *string                `protobuf:"bytes,4,opt,name=contract_type,json=contractType,proto3,oneof" json:"contract_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestCandleRequest) Reset() {
	*x = GetLatestCandleRequest{}
	mi := &file_proto_market_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestCandleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestCandleRequest) ProtoMessage() {}

func (x *GetLatestCandleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestCandleRequest.ProtoReflect.Descriptor instead.
func (*GetLatestCandleRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{3}
}

func (x *GetLatestCandleRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GetLatestCandleRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *GetLatestCandleRequest) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *GetLatestCandleRequest) GetContractType() string {
	if x != nil && x.ContractType != nil {
		return *x.ContractType
	}
	return ""
}

type SubscribeCandlesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Interval      string                 `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Source        *string                `protobuf:"bytes,3,opt,name=source,proto3,oneof" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeCandlesRequest) Reset() {
	*x = SubscribeCandlesRequest{}
	mi := &file_proto_market_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeCandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCandlesRequest) ProtoMessage() {}

func (x *SubscribeCandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCandlesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeCandlesRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeCandlesRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SubscribeCandlesRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *SubscribeCandlesRequest) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

type CandleUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Candle        *Candle                `protobuf:"bytes,1,opt,name=candle,proto3" json:"candle,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CandleUpdate) Reset() {
	*x = CandleUpdate{}
	mi := &file_proto_market_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CandleUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandleUpdate) ProtoMessage() {}

func (x *CandleUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandleUpdate.ProtoReflect.Descriptor instead.
func (*CandleUpdate) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{5}
}

func (x *CandleUpdate) GetCandle() *Candle {
	if x != nil {
		return x.Candle
	}
	return nil
}

func (x *CandleUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Price messages
type Price struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Symbol                 string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	LastPrice              string                 `protobuf:"bytes,2,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	PriceChange_24H        string                 `protobuf:"bytes,3,opt,name=price_change_24h,json=priceChange24h,proto3" json:"price_change_24h,omitempty"`
	PriceChange_24HPercent string                 `protobuf:"bytes,4,opt,name=price_change_24h_percent,json=priceChange24hPercent,proto3" json:"price_change_24h_percent,omitempty"`
	High_24H               string                 `protobuf:"bytes,5,opt,name=high_24h,json=high24h,proto3" json:"high_24h,omitempty"`
	Low_24H                string                 `protobuf:"bytes,6,opt,name=low_24h,json=low24h,proto3" json:"low_24h,omitempty"`
	Volume_24H             string                 `protobuf:"bytes,7,opt,name=volume_24h,json=volume24h,proto3" json:"volume_24h,omitempty"`
	QuoteVolume_24H        string                 `protobuf:"bytes,8,opt,name=quote_volume_24h,json=quoteVolume24h,proto3" json:"quote_volume_24h,omitempty"`
	UpdatedAt              *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Price) Reset() {
	*x = Price{}
	mi := &file_proto_market_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{6}
}

func (x *Price) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Price) GetLastPrice() string {
	if x != nil {
		return x.LastPrice
	}
	return ""
}

func (x *Price) GetPriceChange_24H() string {
	if x != nil {
		return x.PriceChange_24H
	}
	return ""
}

func (x *Price) GetPriceChange_24HPercent() string {
	if x != nil {
		return x.PriceChange_24HPercent
	}
	return ""
}

func (x *Price) GetHigh_24H() string {
	if x != nil {
		return x.High_24H
	}
	return ""
}

func (x *Price) GetLow_24H() string {
	if x != nil {
		return x.Low_24H
	}
	return ""
}

func (x *Price) GetVolume_24H() string {
	if x != nil {
		return x.Volume_24H
	}
	return ""
}

func (x *Price) GetQuoteVolume_24H() string {
	if x != nil {
		return x.QuoteVolume_24H
	}
	return ""
}

func (x *Price) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPriceRequest) Reset() {
	*x = GetPriceRequest{}
	mi := &file_proto_market_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceRequest) ProtoMessage() {}

func (x *GetPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceRequest.ProtoReflect.Descriptor instead.
func (*GetPriceRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{7}
}

func (x *GetPriceRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type GetPricesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbols       []string               `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"` // Empty = all symbols
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPricesRequest) Reset() {
	*x = GetPricesRequest{}
	mi := &file_proto_market_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPricesRequest) ProtoMessage() {}

func (x *GetPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPricesRequest.ProtoReflect.Descriptor instead.
func (*GetPricesRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{8}
}

func (x *GetPricesRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type GetPricesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prices        []*Price               `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPricesResponse) Reset() {
	*x = GetPricesResponse{}
	mi := &file_proto_market_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPricesResponse) ProtoMessage() {}

func (x *GetPricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPricesResponse.ProtoReflect.Descriptor instead.
func (*GetPricesResponse) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{9}
}

func (x *GetPricesResponse) GetPrices() []*Price {
	if x != nil {
		return x.Prices
	}
	return nil
}

type SubscribePricesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbols       []string               `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"` // Empty = all symbols
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribePricesRequest) Reset() {
	*x = SubscribePricesRequest{}
	mi := &file_proto_market_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribePricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePricesRequest) ProtoMessage() {}

func (x *SubscribePricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePricesRequest.ProtoReflect.Descriptor instead.
func (*SubscribePricesRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{10}
}

func (x *SubscribePricesRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type PriceUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         *Price                 `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PriceUpdate) Reset() {
	*x = PriceUpdate{}
	mi := &file_proto_market_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceUpdate) ProtoMessage() {}

func (x *PriceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceUpdate.ProtoReflect.Descriptor instead.
func (*PriceUpdate) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{11}
}

func (x *PriceUpdate) GetPrice() *Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *PriceUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Mark price messages (futures)
type MarkPrice struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Symbol               string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	MarkPrice            string                 `protobuf:"bytes,2,opt,name=mark_price,json=markPrice,proto3" json:"mark_price,omitempty"`
	IndexPrice           string                 `protobuf:"bytes,3,opt,name=index_price,json=indexPrice,proto3" json:"index_price,omitempty"`
	LastPrice            string                 `protobuf:"bytes,4,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	FundingBasis         string                 `protobuf:"bytes,5,opt,name=funding_basis,json=fundingBasis,proto3" json:"funding_basis,omitempty"`
	EstimatedFundingRate string                 `protobuf:"bytes,6,opt,name=estimated_funding_rate,json=estimatedFundingRate,proto3" json:"estimated_funding_rate,omitempty"`
	NextFundingTime      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=next_funding_time,json=nextFundingTime,proto3" json:"next_funding_time,omitempty"`
	Timestamp            *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MarkPrice) Reset() {
	*x = MarkPrice{}
	mi := &file_proto_market_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkPrice) ProtoMessage() {}

func (x *MarkPrice) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkPrice.ProtoReflect.Descriptor instead.
func (*MarkPrice) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{12}
}

func (x *MarkPrice) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MarkPrice) GetMarkPrice() string {
	if x != nil {
		return x.MarkPrice
	}
	return ""
}

func (x *MarkPrice) GetIndexPrice() string {
	if x != nil {
		return x.IndexPrice
	}
	return ""
}

func (x *MarkPrice) GetLastPrice() string {
	if x != nil {
		return x.LastPrice
	}
	return ""
}

func (x *MarkPrice) GetFundingBasis() string {
	if x != nil {
		return x.FundingBasis
	}
	return ""
}

func (x *MarkPrice) GetEstimatedFundingRate() string {
	if x != nil {
		return x.EstimatedFundingRate
	}
	return ""
}

func (x *MarkPrice) GetNextFundingTime() *timestamppb.Timestamp {
	if x != nil {
		return x.NextFundingTime
	}
	return nil
}

func (x *MarkPrice) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type GetMarkPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMarkPriceRequest) Reset() {
	*x = GetMarkPriceRequest{}
	mi := &file_proto_market_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMarkPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarkPriceRequest) ProtoMessage() {}

func (x *GetMarkPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarkPriceRequest.ProtoReflect.Descriptor instead.
func (*GetMarkPriceRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{13}
}

func (x *GetMarkPriceRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type GetMarkPricesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbols       []string               `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"` // Empty = all symbols
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMarkPricesRequest) Reset() {
	*x = GetMarkPricesRequest{}
	mi := &file_proto_market_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMarkPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarkPricesRequest) ProtoMessage() {}

func (x *GetMarkPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarkPricesRequest.ProtoReflect.Descriptor instead.
func (*GetMarkPricesRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{14}
}

func (x *GetMarkPricesRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type GetMarkPricesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarkPrices    []*MarkPrice           `protobuf:"bytes,1,rep,name=mark_prices,json=markPrices,proto3" json:"mark_prices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMarkPricesResponse) Reset() {
	*x = GetMarkPricesResponse{}
	mi := &file_proto_market_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMarkPricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarkPricesResponse) ProtoMessage() {}

func (x *GetMarkPricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarkPricesResponse.ProtoReflect.Descriptor instead.
func (*GetMarkPricesResponse) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{15}
}

func (x *GetMarkPricesResponse) GetMarkPrices() []*MarkPrice {
	if x != nil {
		return x.MarkPrices
	}
	return nil
}

type SubscribeMarkPricesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbols       []string               `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"` // Empty = all symbols
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeMarkPricesRequest) Reset() {
	*x = SubscribeMarkPricesRequest{}
	mi := &file_proto_market_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeMarkPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeMarkPricesRequest) ProtoMessage() {}

func (x *SubscribeMarkPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeMarkPricesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeMarkPricesRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{16}
}

func (x *SubscribeMarkPricesRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type MarkPriceUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarkPrice     *MarkPrice             `protobuf:"bytes,1,opt,name=mark_price,json=markPrice,proto3" json:"mark_price,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkPriceUpdate) Reset() {
	*x = MarkPriceUpdate{}
	mi := &file_proto_market_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkPriceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkPriceUpdate) ProtoMessage() {}

func (x *MarkPriceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkPriceUpdate.ProtoReflect.Descriptor instead.
func (*MarkPriceUpdate) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{17}
}

func (x *MarkPriceUpdate) GetMarkPrice() *MarkPrice {
	if x != nil {
		return x.MarkPrice
	}
	return nil
}

func (x *MarkPriceUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Health and stats messages
type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_proto_market_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{18}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	UptimeSeconds int64                  `protobuf:"varint,3,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	Services      map[string]string      `protobuf:"bytes,4,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // service name -> status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_proto_market_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{19}
}

func (x *HealthResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthResponse) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *HealthResponse) GetServices() map[string]string {
	if x != nil {
		return x.Services
	}
	return nil
}

type GetStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatsRequest) Reset() {
	*x = GetStatsRequest{}
	mi := &file_proto_market_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsRequest) ProtoMessage() {}

func (x *GetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsRequest.ProtoReflect.Descriptor instead.
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{20}
}

type StatsResponse struct {
	state                 protoimpl.MessageState    `protogen:"open.v1"`
	TotalCandles          int64                     `protobuf:"varint,1,opt,name=total_candles,json=totalCandles,proto3" json:"total_candles,omitempty"`
	TotalSymbols          int64                     `protobuf:"varint,2,opt,name=total_symbols,json=totalSymbols,proto3" json:"total_symbols,omitempty"`
	ActiveSubscriptions   int64                     `protobuf:"varint,3,opt,name=active_subscriptions,json=activeSubscriptions,proto3" json:"active_subscriptions,omitempty"`
	PriceUpdatesPerSecond int64                     `protobuf:"varint,4,opt,name=price_updates_per_second,json=priceUpdatesPerSecond,proto3" json:"price_updates_per_second,omitempty"`
	CandleWritesPerSecond int64                     `protobuf:"varint,5,opt,name=candle_writes_per_second,json=candleWritesPerSecond,proto3" json:"candle_writes_per_second,omitempty"`
	ExchangeStats         map[string]*ExchangeStats `protobuf:"bytes,6,rep,name=exchange_stats,json=exchangeStats,proto3" json:"exchange_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	mi := &file_proto_market_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{21}
}

func (x *StatsResponse) GetTotalCandles() int64 {
	if x != nil {
		return x.TotalCandles
	}
	return 0
}

func (x *StatsResponse) GetTotalSymbols() int64 {
	if x != nil {
		return x.TotalSymbols
	}
	return 0
}

func (x *StatsResponse) GetActiveSubscriptions() int64 {
	if x != nil {
		return x.ActiveSubscriptions
	}
	return 0
}

func (x *StatsResponse) GetPriceUpdatesPerSecond() int64 {
	if x != nil {
		return x.PriceUpdatesPerSecond
	}
	return 0
}

func (x *StatsResponse) GetCandleWritesPerSecond() int64 {
	if x != nil {
		return x.CandleWritesPerSecond
	}
	return 0
}

func (x *StatsResponse) GetExchangeStats() map[string]*ExchangeStats {
	if x != nil {
		return x.ExchangeStats
	}
	return nil
}

type ExchangeStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsHealthy     bool                   `protobuf:"varint,2,opt,name=is_healthy,json=isHealthy,proto3" json:"is_healthy,omitempty"`
	MessageCount  int64                  `protobuf:"varint,3,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	ErrorCount    int64                  `protobuf:"varint,4,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	LastUpdate    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeStats) Reset() {
	*x = ExchangeStats{}
	mi := &file_proto_market_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeStats) ProtoMessage() {}

func (x *ExchangeStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_market_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeStats.ProtoReflect.Descriptor instead.
func (*ExchangeStats) Descriptor() ([]byte, []int) {
	return file_proto_market_proto_rawDescGZIP(), []int{22}
}

func (x *ExchangeStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExchangeStats) GetIsHealthy() bool {
	if x != nil {
		return x.IsHealthy
	}
	return false
}

func (x *ExchangeStats) GetMessageCount() int64 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *ExchangeStats) GetErrorCount() int64 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *ExchangeStats) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

var File_proto_market_proto protoreflect.FileDescriptor

const file_proto_market_proto_rawDesc = "" +
	"\n" +
	"\x12proto/market.proto\x12\x0enyyu.market.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xfe\x02\n" +
	"\x06Candle\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1a\n" +
	"\binterval\x18\x02 \x01(\tR\binterval\x12\x1b\n" +
	"\topen_time\x18\x03 \x01(\x03R\bopenTime\x12\x1d\n" +
	"\n" +
	"close_time\x18\x04 \x01(\x03R\tcloseTime\x12\x12\n" +
	"\x04open\x18\x05 \x01(\tR\x04open\x12\x12\n" +
	"\x04high\x18\x06 \x01(\tR\x04high\x12\x10\n" +
	"\x03low\x18\a \x01(\tR\x03low\x12\x14\n" +
	"\x05close\x18\b \x01(\tR\x05close\x12\x16\n" +
	"\x06volume\x18\t \x01(\tR\x06volume\x12!\n" +
	"\fquote_volume\x18\n" +
	" \x01(\tR\vquoteVolume\x12\x1f\n" +
	"\vtrade_count\x18\v \x01(\x05R\n" +
	"tradeCount\x12\x1b\n" +
	"\tis_closed\x18\f \x01(\bR\bisClosed\x12\x16\n" +
	"\x06source\x18\r \x01(\tR\x06source\x12#\n" +
	"\rcontract_type\x18\x0e \x01(\tR\fcontractType\"\xb0\x02\n" +
	"\x11GetCandlesRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1a\n" +
	"\binterval\x18\x02 \x01(\tR\binterval\x12\"\n" +
	"\n" +
	"start_time\x18\x03 \x01(\x03H\x00R\tstartTime\x88\x01\x01\x12\x1e\n" +
	"\bend_time\x18\x04 \x01(\x03H\x01R\aendTime\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\x05 \x01(\x05H\x02R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\x06 \x01(\tH\x03R\x06source\x88\x01\x01\x12(\n" +
	"\rcontract_type\x18\a \x01(\tH\x04R\fcontractType\x88\x01\x01B\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_timeB\b\n" +
	"\x06_limitB\t\n" +
	"\a_sourceB\x10\n" +
	"\x0e_contract_type\"F\n" +
	"\x12GetCandlesResponse\x120\n" +
	"\acandles\x18\x01 \x03(\v2\x16.nyyu.market.v1.CandleR\acandles\"\xb0\x01\n" +
	"\x16GetLatestCandleRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1a\n" +
	"\binterval\x18\x02 \x01(\tR\binterval\x12\x1b\n" +
	"\x06source\x18\x03 \x01(\tH\x00R\x06source\x88\x01\x01\x12(\n" +
	"\rcontract_type\x18\x04 \x01(\tH\x01R\fcontractType\x88\x01\x01B\t\n" +
	"\a_sourceB\x10\n" +
	"\x0e_contract_type\"u\n" +
	"\x17SubscribeCandlesRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1a\n" +
	"\binterval\x18\x02 \x01(\tR\binterval\x12\x1b\n" +
	"\x06source\x18\x03 \x01(\tH\x00R\x06source\x88\x01\x01B\t\n" +
	"\a_source\"x\n" +
	"\fCandleUpdate\x12.\n" +
	"\x06candle\x18\x01 \x01(\v2\x16.nyyu.market.v1.CandleR\x06candle\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xd9\x02\n" +
	"\x05Price\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1d\n" +
	"\n" +
	"last_price\x18\x02 \x01(\tR\tlastPrice\x12(\n" +
	"\x10price_change_24h\x18\x03 \x01(\tR\x0epriceChange24h\x127\n" +
	"\x18price_change_24h_percent\x18\x04 \x01(\tR\x15priceChange24hPercent\x12\x19\n" +
	"\bhigh_24h\x18\x05 \x01(\tR\ahigh24h\x12\x17\n" +
	"\alow_24h\x18\x06 \x01(\tR\x06low24h\x12\x1d\n" +
	"\n" +
	"volume_24h\x18\a \x01(\tR\tvolume24h\x12(\n" +
	"\x10quote_volume_24h\x18\b \x01(\tR\x0equoteVolume24h\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\")\n" +
	"\x0fGetPriceRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\",\n" +
	"\x10GetPricesRequest\x12\x18\n" +
	"\asymbols\x18\x01 \x03(\tR\asymbols\"B\n" +
	"\x11GetPricesResponse\x12-\n" +
	"\x06prices\x18\x01 \x03(\v2\x15.nyyu.market.v1.PriceR\x06prices\"2\n" +
	"\x16SubscribePricesRequest\x12\x18\n" +
	"\asymbols\x18\x01 \x03(\tR\asymbols\"t\n" +
	"\vPriceUpdate\x12+\n" +
	"\x05price\x18\x01 \x01(\v2\x15.nyyu.market.v1.PriceR\x05price\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xdf\x02\n" +
	"\tMarkPrice\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1d\n" +
	"\n" +
	"mark_price\x18\x02 \x01(\tR\tmarkPrice\x12\x1f\n" +
	"\vindex_price\x18\x03 \x01(\tR\n" +
	"indexPrice\x12\x1d\n" +
	"\n" +
	"last_price\x18\x04 \x01(\tR\tlastPrice\x12#\n" +
	"\rfunding_basis\x18\x05 \x01(\tR\ffundingBasis\x124\n" +
	"\x16estimated_funding_rate\x18\x06 \x01(\tR\x14estimatedFundingRate\x12F\n" +
	"\x11next_funding_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x0fnextFundingTime\x128\n" +
	"\ttimestamp\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"-\n" +
	"\x13GetMarkPriceRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"0\n" +
	"\x14GetMarkPricesRequest\x12\x18\n" +
	"\asymbols\x18\x01 \x03(\tR\asymbols\"S\n" +
	"\x15GetMarkPricesResponse\x12:\n" +
	"\vmark_prices\x18\x01 \x03(\v2\x19.nyyu.market.v1.MarkPriceR\n" +
	"markPrices\"6\n" +
	"\x1aSubscribeMarkPricesRequest\x12\x18\n" +
	"\asymbols\x18\x01 \x03(\tR\asymbols\"\x85\x01\n" +
	"\x0fMarkPriceUpdate\x128\n" +
	"\n" +
	"mark_price\x18\x01 \x01(\v2\x19.nyyu.market.v1.MarkPriceR\tmarkPrice\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x0f\n" +
	"\rHealthRequest\"\xf2\x01\n" +
	"\x0eHealthResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12%\n" +
	"\x0euptime_seconds\x18\x03 \x01(\x03R\ruptimeSeconds\x12H\n" +
	"\bservices\x18\x04 \x03(\v2,.nyyu.market.v1.HealthResponse.ServicesEntryR\bservices\x1a;\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x11\n" +
	"\x0fGetStatsRequest\"\xb8\x03\n" +
	"\rStatsResponse\x12#\n" +
	"\rtotal_candles\x18\x01 \x01(\x03R\ftotalCandles\x12#\n" +
	"\rtotal_symbols\x18\x02 \x01(\x03R\ftotalSymbols\x121\n" +
	"\x14active_subscriptions\x18\x03 \x01(\x03R\x13activeSubscriptions\x127\n" +
	"\x18price_updates_per_second\x18\x04 \x01(\x03R\x15priceUpdatesPerSecond\x127\n" +
	"\x18candle_writes_per_second\x18\x05 \x01(\x03R\x15candleWritesPerSecond\x12W\n" +
	"\x0eexchange_stats\x18\x06 \x03(\v20.nyyu.market.v1.StatsResponse.ExchangeStatsEntryR\rexchangeStats\x1a_\n" +
	"\x12ExchangeStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.nyyu.market.v1.ExchangeStatsR\x05value:\x028\x01\"\xc5\x01\n" +
	"\rExchangeStats\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"is_healthy\x18\x02 \x01(\bR\tisHealthy\x12#\n" +
	"\rmessage_count\x18\x03 \x01(\x03R\fmessageCount\x12\x1f\n" +
	"\verror_count\x18\x04 \x01(\x03R\n" +
	"errorCount\x12;\n" +
	"\vlast_update\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastUpdate2\xad\a\n" +
	"\rMarketService\x12S\n" +
	"\n" +
	"GetCandles\x12!.nyyu.market.v1.GetCandlesRequest\x1a\".nyyu.market.v1.GetCandlesResponse\x12Q\n" +
	"\x0fGetLatestCandle\x12&.nyyu.market.v1.GetLatestCandleRequest\x1a\x16.nyyu.market.v1.Candle\x12[\n" +
	"\x10SubscribeCandles\x12'.nyyu.market.v1.SubscribeCandlesRequest\x1a\x1c.nyyu.market.v1.CandleUpdate0\x01\x12B\n" +
	"\bGetPrice\x12\x1f.nyyu.market.v1.GetPriceRequest\x1a\x15.nyyu.market.v1.Price\x12P\n" +
	"\tGetPrices\x12 .nyyu.market.v1.GetPricesRequest\x1a!.nyyu.market.v1.GetPricesResponse\x12X\n" +
	"\x0fSubscribePrices\x12&.nyyu.market.v1.SubscribePricesRequest\x1a\x1b.nyyu.market.v1.PriceUpdate0\x01\x12N\n" +
	"\fGetMarkPrice\x12#.nyyu.market.v1.GetMarkPriceRequest\x1a\x19.nyyu.market.v1.MarkPrice\x12\\\n" +
	"\rGetMarkPrices\x12$.nyyu.market.v1.GetMarkPricesRequest\x1a%.nyyu.market.v1.GetMarkPricesResponse\x12d\n" +
	"\x13SubscribeMarkPrices\x12*.nyyu.market.v1.SubscribeMarkPricesRequest\x1a\x1f.nyyu.market.v1.MarkPriceUpdate0\x01\x12G\n" +
	"\x06Health\x12\x1d.nyyu.market.v1.HealthRequest\x1a\x1e.nyyu.market.v1.HealthResponse\x12J\n" +
	"\bGetStats\x12\x1f.nyyu.market.v1.GetStatsRequest\x1a\x1d.nyyu.market.v1.StatsResponseB\x1cZ\x1anyyu-market/proto/marketpbb\x06proto3"

var (
	file_proto_market_proto_rawDescOnce sync.Once
	file_proto_market_proto_rawDescData []byte
)

func file_proto_market_proto_rawDescGZIP() []byte {
	file_proto_market_proto_rawDescOnce.Do(func() {
		file_proto_market_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_market_proto_rawDesc), len(file_proto_market_proto_rawDesc)))
	})
	return file_proto_market_proto_rawDescData
}

var file_proto_market_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_market_proto_goTypes = []any{
	(*Candle)(nil),                     // 0: nyyu.market.v1.Candle
	(*GetCandlesRequest)(nil),          // 1: nyyu.market.v1.GetCandlesRequest
	(*GetCandlesResponse)(nil),         // 2: nyyu.market.v1.GetCandlesResponse
	(*GetLatestCandleRequest)(nil),     // 3: nyyu.market.v1.GetLatestCandleRequest
	(*SubscribeCandlesRequest)(nil),    // 4: nyyu.market.v1.SubscribeCandlesRequest
	(*CandleUpdate)(nil),               // 5: nyyu.market.v1.CandleUpdate
	(*Price)(nil),                      // 6: nyyu.market.v1.Price
	(*GetPriceRequest)(nil),            // 7: nyyu.market.v1.GetPriceRequest
	(*GetPricesRequest)(nil),           // 8: nyyu.market.v1.GetPricesRequest
	(*GetPricesResponse)(nil),          // 9: nyyu.market.v1.GetPricesResponse
	(*SubscribePricesRequest)(nil),     // 10: nyyu.market.v1.SubscribePricesRequest
	(*PriceUpdate)(nil),                // 11: nyyu.market.v1.PriceUpdate
	(*MarkPrice)(nil),                  // 12: nyyu.market.v1.MarkPrice
	(*GetMarkPriceRequest)(nil),        // 13: nyyu.market.v1.GetMarkPriceRequest
	(*GetMarkPricesRequest)(nil),       // 14: nyyu.market.v1.GetMarkPricesRequest
	(*GetMarkPricesResponse)(nil),      // 15: nyyu.market.v1.GetMarkPricesResponse
	(*SubscribeMarkPricesRequest)(nil), // 16: nyyu.market.v1.SubscribeMarkPricesRequest
	(*MarkPriceUpdate)(nil),            // 17: nyyu.market.v1.MarkPriceUpdate
	(*HealthRequest)(nil),              // 18: nyyu.market.v1.HealthRequest
	(*HealthResponse)(nil),             // 19: nyyu.market.v1.HealthResponse
	(*GetStatsRequest)(nil),            // 20: nyyu.market.v1.GetStatsRequest
	(*StatsResponse)(nil),              // 21: nyyu.market.v1.StatsResponse
	(*ExchangeStats)(nil),              // 22: nyyu.market.v1.ExchangeStats
	nil,                                // 23: nyyu.market.v1.HealthResponse.ServicesEntry
	nil,                                // 24: nyyu.market.v1.StatsResponse.ExchangeStatsEntry
	(*timestamppb.Timestamp)(nil),      // 25: google.protobuf.Timestamp
}
var file_proto_market_proto_depIdxs = []int32{
	0,  // 0: nyyu.market.v1.GetCandlesResponse.candles:type_name -> nyyu.market.v1.Candle
	0,  // 1: nyyu.market.v1.CandleUpdate.candle:type_name -> nyyu.market.v1.Candle
	25, // 2: nyyu.market.v1.CandleUpdate.timestamp:type_name -> google.protobuf.Timestamp
	25, // 3: nyyu.market.v1.Price.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 4: nyyu.market.v1.GetPricesResponse.prices:type_name -> nyyu.market.v1.Price
	6,  // 5: nyyu.market.v1.PriceUpdate.price:type_name -> nyyu.market.v1.Price
	25, // 6: nyyu.market.v1.PriceUpdate.timestamp:type_name -> google.protobuf.Timestamp
	25, // 7: nyyu.market.v1.MarkPrice.next_funding_time:type_name -> google.protobuf.Timestamp
	25, // 8: nyyu.market.v1.MarkPrice.timestamp:type_name -> google.protobuf.Timestamp
	12, // 9: nyyu.market.v1.GetMarkPricesResponse.mark_prices:type_name -> nyyu.market.v1.MarkPrice
	12, // 10: nyyu.market.v1.MarkPriceUpdate.mark_price:type_name -> nyyu.market.v1.MarkPrice
	25, // 11: nyyu.market.v1.MarkPriceUpdate.timestamp:type_name -> google.protobuf.Timestamp
	23, // 12: nyyu.market.v1.HealthResponse.services:type_name -> nyyu.market.v1.HealthResponse.ServicesEntry
	24, // 13: nyyu.market.v1.StatsResponse.exchange_stats:type_name -> nyyu.market.v1.StatsResponse.ExchangeStatsEntry
	25, // 14: nyyu.market.v1.ExchangeStats.last_update:type_name -> google.protobuf.Timestamp
	22, // 15: nyyu.market.v1.StatsResponse.ExchangeStatsEntry.value:type_name -> nyyu.market.v1.ExchangeStats
	1,  // 16: nyyu.market.v1.MarketService.GetCandles:input_type -> nyyu.market.v1.GetCandlesRequest
	3,  // 17: nyyu.market.v1.MarketService.GetLatestCandle:input_type -> nyyu.market.v1.GetLatestCandleRequest
	4,  // 18: nyyu.market.v1.MarketService.SubscribeCandles:input_type -> nyyu.market.v1.SubscribeCandlesRequest
	7,  // 19: nyyu.market.v1.MarketService.GetPrice:input_type -> nyyu.market.v1.GetPriceRequest
	8,  // 20: nyyu.market.v1.MarketService.GetPrices:input_type -> nyyu.market.v1.GetPricesRequest
	10, // 21: nyyu.market.v1.MarketService.SubscribePrices:input_type -> nyyu.market.v1.SubscribePricesRequest
	13, // 22: nyyu.market.v1.MarketService.GetMarkPrice:input_type -> nyyu.market.v1.GetMarkPriceRequest
	14, // 23: nyyu.market.v1.MarketService.GetMarkPrices:input_type -> nyyu.market.v1.GetMarkPricesRequest
	16, // 24: nyyu.market.v1.MarketService.SubscribeMarkPrices:input_type -> nyyu.market.v1.SubscribeMarkPricesRequest
	18, // 25: nyyu.market.v1.MarketService.Health:input_type -> nyyu.market.v1.HealthRequest
	20, // 26: nyyu.market.v1.MarketService.GetStats:input_type -> nyyu.market.v1.GetStatsRequest
	2,  // 27: nyyu.market.v1.MarketService.GetCandles:output_type -> nyyu.market.v1.GetCandlesResponse
	0,  // 28: nyyu.market.v1.MarketService.GetLatestCandle:output_type -> nyyu.market.v1.Candle
	5,  // 29: nyyu.market.v1.MarketService.SubscribeCandles:output_type -> nyyu.market.v1.CandleUpdate
	6,  // 30: nyyu.market.v1.MarketService.GetPrice:output_type -> nyyu.market.v1.Price
	9,  // 31: nyyu.market.v1.MarketService.GetPrices:output_type -> nyyu.market.v1.GetPricesResponse
	11, // 32: nyyu.market.v1.MarketService.SubscribePrices:output_type -> nyyu.market.v1.PriceUpdate
	12, // 33: nyyu.market.v1.MarketService.GetMarkPrice:output_type -> nyyu.market.v1.MarkPrice
	15, // 34: nyyu.market.v1.MarketService.GetMarkPrices:output_type -> nyyu.market.v1.GetMarkPricesResponse
	17, // 35: nyyu.market.v1.MarketService.SubscribeMarkPrices:output_type -> nyyu.market.v1.MarkPriceUpdate
	19, // 36: nyyu.market.v1.MarketService.Health:output_type -> nyyu.market.v1.HealthResponse
	21, // 37: nyyu.market.v1.MarketService.GetStats:output_type -> nyyu.market.v1.StatsResponse
	27, // [27:38] is the sub-list for method output_type
	16, // [16:27] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_market_proto_init() }
func file_proto_market_proto_init() {
	if File_proto_market_proto != nil {
		return
	}
	file_proto_market_proto_msgTypes[1].OneofWrappers = []any{}
	file_proto_market_proto_msgTypes[3].OneofWrappers = []any{}
	file_proto_market_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_market_proto_rawDesc), len(file_proto_market_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_market_proto_goTypes,
		DependencyIndexes: file_proto_market_proto_depIdxs,
		MessageInfos:      file_proto_market_proto_msgTypes,
	}.Build()
	File_proto_market_proto = out.File
	file_proto_market_proto_goTypes = nil
	file_proto_market_proto_depIdxs = nil
}
