# Nyyu Market - Nginx Configuration
# This config provides reverse proxy for gRPC and HTTP APIs

# Upstream for HTTP API
upstream nyyu_http_api {
    server localhost:8080;
    keepalive 32;
}

# Upstream for gRPC API
upstream nyyu_grpc_api {
    server localhost:50051;
    keepalive 32;
}

# HTTP API Server
server {
    listen 80;
    server_name api.yourdomain.com;  # Change this to your domain

    # Redirect to HTTPS in production
    # Uncomment after SSL is set up
    # return 301 https://$server_name$request_uri;

    # For testing without SSL, allow HTTP
    location / {
        proxy_pass http://nyyu_http_api;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://nyyu_http_api/health;
        access_log off;
    }

    # Stats endpoint
    location /api/v1/stats {
        proxy_pass http://nyyu_http_api/api/v1/stats;
    }

    # Access log
    access_log /var/log/nginx/nyyu_http_access.log;
    error_log /var/log/nginx/nyyu_http_error.log;
}

# HTTPS HTTP API Server (after SSL setup)
server {
    listen 443 ssl http2;
    server_name api.yourdomain.com;  # Change this to your domain

    # SSL Configuration (Let's Encrypt)
    # Certbot will add these lines automatically
    # ssl_certificate /etc/letsencrypt/live/api.yourdomain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/api.yourdomain.com/privkey.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    location / {
        proxy_pass http://nyyu_http_api;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Connection "";

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }

    location /health {
        proxy_pass http://nyyu_http_api/health;
        access_log off;
    }

    location /api/v1/stats {
        proxy_pass http://nyyu_http_api/api/v1/stats;
    }

    # Access log
    access_log /var/log/nginx/nyyu_https_access.log;
    error_log /var/log/nginx/nyyu_https_error.log;
}

# gRPC API Server (HTTP/2 required)
server {
    listen 443 ssl http2;
    server_name grpc.yourdomain.com;  # Change this to your domain

    # SSL Configuration (Let's Encrypt)
    # Certbot will add these lines automatically
    # ssl_certificate /etc/letsencrypt/live/grpc.yourdomain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/grpc.yourdomain.com/privkey.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # gRPC settings
    location / {
        grpc_pass grpc://nyyu_grpc_api;

        # Headers
        grpc_set_header Host $host;
        grpc_set_header X-Real-IP $remote_addr;
        grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        grpc_set_header X-Forwarded-Proto https;

        # Timeouts for gRPC
        grpc_connect_timeout 30s;
        grpc_send_timeout 30s;
        grpc_read_timeout 30s;

        # Buffer settings for gRPC
        grpc_buffer_size 4k;

        # Error handling
        error_page 502 = /error502grpc;
    }

    # gRPC error handling
    location = /error502grpc {
        internal;
        default_type application/grpc;
        add_header grpc-status 14;
        add_header grpc-message "Service unavailable";
        return 204;
    }

    # Access log
    access_log /var/log/nginx/nyyu_grpc_access.log;
    error_log /var/log/nginx/nyyu_grpc_error.log;
}

# HTTP to HTTPS redirect for gRPC domain
server {
    listen 80;
    server_name grpc.yourdomain.com;
    return 301 https://$server_name$request_uri;
}
